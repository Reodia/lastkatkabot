package com.senderman.lastkatkabot.command.user;

import com.annimon.tgbotsmodule.api.methods.Methods;
import com.annimon.tgbotsmodule.commands.context.MessageContext;
import com.senderman.lastkatkabot.command.CommandExecutor;
import com.senderman.lastkatkabot.dbservice.UserStatsService;
import com.senderman.lastkatkabot.util.Html;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.User;

@Component
public class Stats implements CommandExecutor {

    private final UserStatsService users;


    public Stats(UserStatsService users) {
        this.users = users;
    }

    @Override
    public String command() {
        return "/stats";
    }

    @Override
    public String getDescription() {
        return "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞. –†–µ–ø–ª–∞–µ–º –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–ø–ª–∞–π–Ω—É—Ç–æ–≥–æ";
    }

    @Override
    public void accept(MessageContext ctx) {
        User user = (ctx.message().isReply()) ? ctx.message().getReplyToMessage().getFrom() : ctx.user();

        if (user.getIsBot()) {
            ctx.replyToMessage("–ù–æ —ç—Ç–æ –∂–µ –ø—Ä–æ—Å—Ç–æ –±–æ—Ç, –∏–º–∏—Ç–∞—Ü–∏—è —á–µ–ª–æ–≤–µ–∫–∞! " +
                               "–†–∞–∑–≤–µ –º–æ–∂–µ—Ç –±–æ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å —Å–∏–º—Ñ–æ–Ω–∏—é, –∏–º–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –∏–≥—Ä–∞—Ç—å –≤ BnC, —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –¥—É—ç–ª—è—Ö?")
                    .callAsync(ctx.sender);
            return;
        }

        var stats = users.findById(user.getId());
        String name = Html.htmlSafe(user.getFirstName());
        int winRate = stats.getDuelsTotal() == 0 ? 0 : 100 * stats.getDuelWins() / stats.getDuelsTotal();
        String text = """
                üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ %s:

                üëë –î—É—ç–ª–µ–π –≤—ã–∏–≥—Ä–∞–Ω–æ: %d
                ‚öîÔ∏è –í—Å–µ–≥–æ –¥—É—ç–ª–µ–π: %d
                üìà –í–∏–Ω—Ä–µ–π—Ç: %d

                üêÆ –ë–∞–ª–ª–æ–≤ –∑–∞ –±—ã–∫–∏ –∏ –∫–æ—Ä–æ–≤—ã: %d"""
                .formatted(name, stats.getDuelWins(), stats.getDuelsTotal(), winRate, stats.getBncScore());

        if (stats.getLoverId() != null) {
            var lover = Methods.getChatMember(stats.getLoverId(), stats.getLoverId()).call(ctx.sender);
            if (lover != null) {
                String loverLink = Html.getUserLink(lover.getUser());
                text += "\n\n‚ù§Ô∏è –í—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∫–∞: " + loverLink;
            }
        }
        ctx.reply(text).callAsync(ctx.sender);
    }
}
