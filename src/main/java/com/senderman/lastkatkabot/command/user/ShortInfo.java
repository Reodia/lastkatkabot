package com.senderman.lastkatkabot.command.user;

import com.annimon.tgbotsmodule.api.methods.Methods;
import com.annimon.tgbotsmodule.services.CommonAbsSender;
import com.senderman.lastkatkabot.command.CommandExecutor;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.Message;

@Component
public class ShortInfo implements CommandExecutor {

    public ShortInfo() {
    }

    @Override
    public String getTrigger() {
        return "/shortinfo";
    }

    @Override
    public String getDescription() {
        return "–∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–∞ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ä–µ–ø–ª–∞–π";
    }

    @Override
    public void execute(Message message, CommonAbsSender telegram) {
        var chatId = message.getChatId();
        var userId = message.getFrom().getId();

        String info = String.format("""
                ==== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ====

                üí¨ ID —á–∞—Ç–∞: <code>%d</code>
                üôç‚Äç‚ôÇÔ∏è –í–∞—à ID: <code>%d</code>""", chatId, userId);

        if (message.isReply()) {
            var reply = message.getReplyToMessage();
            var replyMessageId = reply.getMessageId();
            var replyUserId = reply.getFrom().getId();
            info += String.format("""


                    ‚úâÔ∏è ID reply: <code>%d</code>
                    üôç‚Äç‚ôÇ ID —é–∑–µ—Ä–∞ –∏–∑ reply: <code>%d</code>""", replyMessageId, replyUserId);

            var forward = reply.getForwardFromChat();
            if (forward != null && forward.isChannelChat()) {
                info += String.format("\n\uD83D\uDCE2 ID –∫–∞–Ω–∞–ª–∞: <code>%d</code>", forward.getId());
            }
        }
        Methods.sendMessage(chatId, info).callAsync(telegram);

    }
}
