package com.senderman.lastkatkabot.usercommands

import com.senderman.lastkatkabot.LastkatkaBotHandler
import com.senderman.neblib.CommandExecutor
import org.telegram.telegrambots.meta.api.objects.Message

class ShortInfo(private val handler: LastkatkaBotHandler) : CommandExecutor {
    override val command: String
        get() = "/shortinfo"
    override val desc: String
        get() = "–∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–∞ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ä–µ–ø–ª–∞–π"

    override fun execute(message: Message) {
        val chatId = message.chatId
        val userId = message.from.id
        var info = """
            ==== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ====
            
            üí¨ ID —á–∞—Ç–∞: <code>$chatId</code>
            üôç‚Äç‚ôÇÔ∏è –í–∞—à ID: <code>$userId</code>
        """.trimIndent()
        message.replyToMessage?.let { reply ->
            val replyMessageId = reply.messageId
            val replyUserId = reply.from.id
            info += """
                
                ‚úâÔ∏è ID reply: <code>$replyMessageId</code>
                üôç‚Äç‚ôÇ ID —é–∑–µ—Ä–∞ –∏–∑ reply: <code>$replyUserId</code>
            """.trimIndent()

            reply.forwardFromChat?.let {
                if (it.isChannelChat)
                    info += "\n\uD83D\uDCE2 ID –∫–∞–Ω–∞–ª–∞: <code>${reply.forwardFromChat.id}</code>"
            }
        }

        handler.sendMessage(chatId, info)
    }
}